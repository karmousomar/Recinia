@using Recinia.Entities
@model LoggingVM
@inject SignInManager<ApplicationUser> SignInManager
@using Microsoft.AspNetCore.Identity
@{

}
@*<core-app></core-app>*@
@using (Html.BeginForm())
{
    <div class="ui raised very padded text container" style="margin-right:5%;margin-top:200px;">
        <h3 class="ui header centered">APP LOGIN FORM</h3>
        <div style="margin-bottom:50px"></div>
        @*<div class="ui stack segment">
            <div class="field">
                <div class="ui left icon input">
                    <i class="user icon"></i>
                    @Html.EditorFor(m => m.UserName)
                    <span asp-validation-for="Username" style="color:red;"></span>
                </div>
            </div>
            <div class="field">
                <div class="ui left icon input">
                    <i class="lock icon"></i>
                    @Html.EditorFor(m => m.Password)
                    <span asp-validation-for="Password" style="color:red;"></span>
                </div>
            </div>

            <div>
                <button class="ui blue button">
                    <i class="lock icon"></i>
                    LOGIN
                </button>
            </div>

            <div asp-validation-summary="All" class="ui error" style="color:red;"></div>

        </div>*@
        @Html.AntiForgeryToken()
    </div>
}
@using (Html.BeginForm())
{
    <div class="ui placeholder segment">
        <div class="ui two column very relaxed stackable grid">
            <div class="column">
                <div class="ui form">
                    <div class="field">
                        <label>Username</label>
                        <div class="ui left icon input">
                            @Html.EditorFor(m => m.UserName)
                            <i class="user icon"></i>
                        </div>
                    </div>
                    <div class="field">
                        <label>Password</label>
                        <div class="ui left icon input">
                            @Html.EditorFor(m => m.Password)
                            <i class="lock icon"></i>
                        </div>
                    </div>
                    <div>
                        <button class="ui blue button">
                            <i class="lock icon"></i>
                            LOGIN
                        </button>
                    </div>
                </div>
            </div>
            <div class="middle aligned column">
                <div class="ui big button">
                    <i class="signup icon"></i>
                    <a href="~/Main/Register">Sign Up</a>
                </div>
            </div>
        </div>
        <div class="ui vertical divider">
            Or
        </div>
        <div asp-validation-summary="All" class="ui error"></div>
    </div>
}
    <div class="center aligned column">
        <h3 class="ui header centered">Use Another Service to Log In</h3>
        @{
            var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
            if (loginProviders.Count == 0)
            {
                <div>
                    <p>
                        There are no external authentication services configured.
                    </p>
                </div>
            }
            else
            {
                <form asp-controller="Main" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal" role="form">
                    <div style="text-align:center;">
                        <p>
                            @foreach (var provider in loginProviders)
                            {

                                <button type="submit" class="btn btn-default" name="provider" @*value="@provider.AuthenticationScheme"*@ title="Log in using your @provider.DisplayName account">@*@provider.AuthenticationScheme*@</button>
                            }
                        </p>
                    </div>
                </form>
            }
        }
    </div>
